type Query {
  """
  Returns a User if it exists.
  """
  user(uuid: ID!): User
  """
  The logged in User, if authenticated.
  """
  viewer: User
}

type Mutation {
  """
  Connect Viewer to a Stripe Token.
  """
  connectStripe(token: String!): User!

  createPlan(options: CreatePlanOptions!): Plan!
}

# User

type User {
  """
  The User's UUID.
  """
  uuid: ID!
  """
  The User's Email.
  """
  email: String!
  """
  The User's Discord ID.
  """
  discordId: String!
  """
  The User's Stripe ID if they've set up payments.
  """
  stripeId: String
  """
  The User's registration date and time.
  """
  createdAt: Date!
}

# Plan

enum PlanType {
  GOOGLE
}

type Plan {
  name: String!
  type: PlanType!
  amount: Int!
  paymentDue: Date!
  owner: User!
  createdAt: Date!
}

input CreatePlanOptions {
  name: String!
  type: PlanType!
  amount: Int!
  """
  0-indexed day in month payments are done.
  """
  paymentDueDay: Int!
}

"""
A ISO-8601 formatted date.
"""
scalar Date
